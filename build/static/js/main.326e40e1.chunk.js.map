{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder.js","AddNote.js","NotefulError.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","children","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","addNoteToState","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","console","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","AddFolder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickAddFolder","newItem","JSON","stringify","Content-Type","body","code","status","message","alert","getValue","val","setState","state","_this2","htmlFor","defaultValue","onChange","target","value","AddNote","generateFolderList","item","handleClickAddNote","description","document","getElementById","getName","getFolder","getContent","cols","rows","NotefulError","hasError","App","log","handleAddFolder","toConsumableArray","handleAddNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","newFolder","src_NotefulError","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App"],"mappings":"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","file":"static/js/main.326e40e1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CircleButton.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function NavCircleButton(props) {\r\n  const { tag, className, children, ...otherProps } = props\r\n\r\n  return React.createElement(\r\n    props.tag,\r\n    {\r\n      className: ['NavCircleButton', props.className].join(' '),\r\n      ...otherProps\r\n    },\r\n    props.children\r\n  )\r\n}\r\n\r\nNavCircleButton.defaultProps ={\r\n  tag: 'a',\r\n}\r\n\r\nNavCircleButton.propTypes ={\r\n  tag: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func\r\n  ]),\r\n  \r\n  className: PropTypes.string,\r\n  children: PropTypes.array\r\n\r\n}","import React from 'react'\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addFolder: () => {},\r\n  addNote: () => {},\r\n  deleteNote: () => {},\r\n  addNoteToState: () => {}\r\n  // addFolderName: () => {}\r\n})\r\n","\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id == folderId)\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  notes.find(note => note.id == noteId)\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folderId == folderId)\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folderId == folderId).length\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { countNotesForFolder } from '../notes-helpers'\r\nimport './NoteListNav.css'\r\n\r\nexport default class NoteListNav extends React.Component {\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { folders=[], notes=[] } = this.context\r\n    return (\r\n      <div className='NoteListNav'>\r\n        <ul className='NoteListNav__list'>\r\n          {folders.map(folder =>\r\n            <li key={folder.id}>\r\n              <NavLink\r\n                className='NoteListNav__folder-link'\r\n                to={`/folder/${folder.id}`}\r\n              >\r\n                <span className='NoteListNav__num-notes'>\r\n                  {countNotesForFolder(notes, folder.id)}\r\n                </span>\r\n                {folder.name}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListNav__button-wrapper'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-folder'\r\n            type='button'\r\n            className='NoteListNav__add-folder-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Folder\r\n          </CircleButton>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote, findFolder } from '../notes-helpers'\r\nimport PropTypes from 'prop-types'\r\nimport './NotePageNav.css'\r\n\r\nexport default class NotePageNav extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      goBack: () => { }\r\n    },\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { notes, folders, } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || {}\r\n    const folder = findFolder(folders, note.folderId)\r\n    return (\r\n      <div className='NotePageNav'>\r\n        <CircleButton\r\n          tag='button'\r\n          role='link'\r\n          onClick={() => this.props.history.goBack()}\r\n          className='NotePageNav__back-button'\r\n        >\r\n          <FontAwesomeIcon icon='chevron-left' />\r\n          <br />\r\n          Back\r\n        </CircleButton>\r\n        {folder && (\r\n          <h3 className='NotePageNav__folder-name'>\r\n            {folder.name}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageNav.propTypes = {\r\n  match: PropTypes.object\r\n}","export default {\r\n  API_ENDPOINT: 'https://sheltered-forest-98625.herokuapp.com/'\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport PropTypes from 'prop-types'\r\nimport './Note.css'\r\n\r\nexport default class Note extends React.Component {\r\n  static defaultProps ={\r\n    onDeleteNote: () => {},\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  handleClickDelete = e => {\r\n    e.preventDefault()\r\n    const noteId = this.props.id\r\n\r\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n      })\r\n      .then(() => {\r\n        this.context.deleteNote(noteId)\r\n        // allow parent to perform extra behaviour\r\n        this.props.onDeleteNote(noteId)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { name, id, modified } = this.props\r\n    return (\r\n      <div className='Note'>\r\n        <h2 className='Note__title'>\r\n          <Link to={`/note/${id}`}>\r\n            {name}\r\n          </Link>\r\n        </h2>\r\n        <button\r\n          className='Note__delete'\r\n          type='button'\r\n          onClick={this.handleClickDelete}\r\n        >\r\n          <FontAwesomeIcon icon='trash-alt' />\r\n          {' '}\r\n          remove\r\n        </button>\r\n        <div className='Note__dates'>\r\n          <div className='Note__dates-modified'>\r\n            Modified\r\n            {' '}\r\n            <span className='Date'>\r\n              {format(modified, 'Do MMM YYYY')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNote.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n  modified: PropTypes.string\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Note from '../Note/Note'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { getNotesForFolder } from '../notes-helpers'\r\nimport './NoteListMain.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NoteListMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  render() {\r\n    const { folderId } = this.props.match.params\r\n    const { notes=[] } = this.context\r\n    const notesForFolder = getNotesForFolder(notes, folderId)\r\n    return (\r\n      <section className='NoteListMain'>\r\n        <ul>\r\n          {notesForFolder.map(note =>\r\n            <li key={note.id}>\r\n              <Note\r\n                id={note.id}\r\n                name={note.name}\r\n                modified={note.modified}\r\n              />\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListMain__button-container'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-note'\r\n            type='button'\r\n            className='NoteListMain__add-note-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Note\r\n          </CircleButton>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNoteListMain.propTypes = {\r\n  match: PropTypes.object\r\n}","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote } from '../notes-helpers'\r\nimport './NotePageMain.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NotePageMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  handleDeleteNote = noteId => {\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    const { notes=[] } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || { content: '' }\r\n    return (\r\n      <section className='NotePageMain'>\r\n        <Note\r\n          id={note.id}\r\n          name={note.name}\r\n          modified={note.modified}\r\n          onDeleteNote={this.handleDeleteNote}\r\n        />\r\n        <div className='NotePageMain__content'>\r\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n            <p key={i}>{para}</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageMain.propTypes = {\r\n  history: PropTypes.object\r\n}","import React from 'react'\r\nimport config from './config'\r\nimport ApiContext from './ApiContext'\r\nimport './add.css'\r\n\r\nclass AddFolder extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      name:''\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  static contextType = ApiContext\r\n  \r\n\r\n  handleClickAddFolder = (name) => {\r\n    let newItem = JSON.stringify({\r\n      name: name,\r\n    })\r\n    let error;\r\n\r\n    if(name.length >= 3 && typeof name === typeof ''){\r\n    fetch(`${config.API_ENDPOINT}/folders`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: newItem\r\n    }).then(res => {\r\n      if (!res.ok){\r\n        error = { code: res.status };\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(folder => {\r\n      if (error) {\r\n        error.message = folder.message;\r\n        return Promise.reject(error);\r\n      }\r\n      this.context.addFolder(folder)\r\n      this.props.history.push(`/`)\r\n    })\r\n    .catch(error => {\r\n      console.error({error});\r\n    });\r\n  } else {\r\n    alert('please use more than 3 characters for name')\r\n  }\r\n    \r\n  }\r\n  getValue = (val) => {\r\n    this.setState({\r\n      name:val\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    //console.log(this.handleClickAddFolder('hi'))\r\n    \r\n    return (\r\n      <div>\r\n\r\n        <form>\r\n          <label\r\n            htmlFor='new-folder'\r\n          >New Folder Name:</label>\r\n          <input\r\n            id='new-Folder'\r\n            defaultValue='Hello'\r\n            onChange={(e) => this.getValue(e.target.value)}\r\n          >\r\n\r\n          </input>\r\n          <button\r\n            className='Add Folder'\r\n            type='button'\r\n            onClick={(e) => this.handleClickAddFolder(`${this.state.name}`)}\r\n          >\r\n            Add New Folder!\r\n      </button>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default AddFolder","import React from 'react'\r\nimport ApiContext from './ApiContext'\r\nimport config from './config'\r\n\r\n\r\nclass AddNote extends React.Component {\r\n  state = { \r\n    name:'',\r\n    folderId:'',\r\n    content:'',\r\n    modified:''\r\n   }\r\n\r\n  static contextType = ApiContext;\r\n\r\n  generateFolderList = () => {\r\n    const folderList = this.context.folders.map(item => {\r\n      return <option key={item.id} value={item.id}>{item.name}</option>\r\n    })\r\n    return folderList\r\n  }\r\n\r\n  handleClickAddNote = (name, description, folder) => {\r\n   \r\n    let newItem = JSON.stringify({\r\n      name: name,\r\n      folderId: folder || document.getElementById('add-folder').value,\r\n      content: description,\r\n      \r\n    })\r\n    let error;\r\n\r\n    if(name.length >= 3 && description.length >= 3){\r\n    fetch(`${config.API_ENDPOINT}/notes`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: newItem\r\n    })\r\n    .then(res => {\r\n      if (!res.ok){\r\n        error = { code: res.status };\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(note => {\r\n      if (error) {\r\n        error.message = note.message;\r\n        return Promise.reject(error);\r\n      }\r\n      this.context.addNoteToState(note)\r\n      this.props.history.push(`/`)\r\n    })\r\n    .catch(error => {\r\n      console.error({error});\r\n    });\r\n  } else {\r\n    alert('Please use at least 3 characters for name and description')\r\n  }\r\n    \r\n  }\r\n\r\n  getName = (name) => {\r\n    this.setState({\r\n      name:name\r\n    })\r\n\r\n  }\r\n\r\n  getFolder = (folder) => {\r\n    this.setState({\r\n      folderId: folder\r\n    })\r\n\r\n  }\r\n  getContent = (content) => {\r\n    this.setState({\r\n      content: content\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() { \r\n    \r\n\r\n    return (\r\n\r\n      <form>\r\n        <label htmlFor=\"add-folder\">Add Folder</label>\r\n        <select id=\"add-folder\"\r\n        onChange={(e) => this.getFolder(e.target.value)}\r\n        >{this.generateFolderList()}</select>\r\n        <label htmlFor=\"note-name\">Note Name</label>\r\n        <input \r\n          id=\"note-name\"\r\n          onChange={(e) => this.getName(e.target.value)}\r\n        >\r\n        </input>\r\n        <label htmlFor=\"add-description\">Add Description</label>\r\n        <textarea name=\"add-description\" id=\"add-description\" cols=\"30\" rows=\"10\"\r\n        onChange={(e) => this.getContent(e.target.value)}\r\n        ></textarea>\r\n        <button type=\"button\" onClick={()=> this.handleClickAddNote(this.state.name, this.state.content, this.state.folderId)}>Add Note</button>\r\n      </form>\r\n\r\n      );\r\n  }\r\n}\r\n \r\nexport default AddNote;","import React from 'react'\r\n\r\n\r\nclass NotefulError extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render(){\r\n    if (this.state.hasError) {      \r\n      return (\r\n        <h2>Could not display this Data, Please try and refresh your page!.</h2>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default NotefulError","import React, {Component} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport NoteListNav from '../NoteListNav/NoteListNav';\r\nimport NotePageNav from '../NotePageNav/NotePageNav';\r\nimport NoteListMain from '../NoteListMain/NoteListMain';\r\nimport NotePageMain from '../NotePageMain/NotePageMain';\r\nimport ApiContext from '../ApiContext';\r\nimport config from '../config';\r\nimport AddFolder from '../AddFolder'\r\nimport AddNote from '../AddNote'\r\nimport NotefulError from '../NotefulError'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        notes: [],\r\n        folders: [],\r\n        //folderName:''\r\n    };\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(`${config.API_ENDPOINT}/notes`),\r\n            fetch(`${config.API_ENDPOINT}/folders`)\r\n        ])\r\n            .then(([notesRes, foldersRes]) => {\r\n                if (!notesRes.ok)\r\n                    return notesRes.json().then(e => Promise.reject(e));\r\n                if (!foldersRes.ok)\r\n                    return foldersRes.json().then(e => Promise.reject(e));\r\n\r\n                return Promise.all([notesRes.json(), foldersRes.json()]);\r\n            })\r\n            .then(([notes, folders]) => {\r\n                this.setState({notes, folders});\r\n            })\r\n            .catch(error => {\r\n                console.error({error});\r\n            });\r\n    }\r\n\r\n    handleDeleteNote = noteId => {\r\n        console.log('this is running', noteId)\r\n        this.setState({\r\n            notes: this.state.notes.filter(note => note.id != noteId)\r\n        });\r\n    };\r\n\r\n    handleAddFolder = folder => {\r\n        this.setState({\r\n            folders: [...this.state.folders, folder]\r\n        })\r\n    }\r\n\r\n    handleAddNote = note => {\r\n        this.setState({\r\n            notes: [...this.state.notes, note]\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    renderNavRoutes() {\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListNav}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\r\n                <Route path=\"/add-folder\" component={NotePageNav} />\r\n                <Route path=\"/add-note\" component={NotePageNav} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderMainRoutes() {\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListMain}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const value = {\r\n            notes: this.state.notes,\r\n            folders: this.state.folders,\r\n            newFolder: this.state.newFolder,\r\n            deleteNote: this.handleDeleteNote,\r\n            addFolder: this.handleAddFolder,\r\n            addNoteToState: this.handleAddNote\r\n            \r\n\r\n        };\r\n        return (\r\n           <NotefulError>\r\n           <ApiContext.Provider value={value}>\r\n                <div className=\"App\">\r\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\r\n                    <header className=\"App__header\">\r\n                        <h1>\r\n                            <Link to=\"/\">Noteful</Link>{' '}\r\n                            <FontAwesomeIcon icon=\"check-double\" />\r\n                        </h1>\r\n                    </header>\r\n                    <main className=\"App__main\">\r\n                    <Route path='/add-folder' component={AddFolder}/>\r\n                    <Route path='/add-note' component={AddNote}/>\r\n                        {this.renderMainRoutes()}</main>\r\n                </div>\r\n            </ApiContext.Provider>\r\n            </NotefulError>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'typeface-roboto'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}