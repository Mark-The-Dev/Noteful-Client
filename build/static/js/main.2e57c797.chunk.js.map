{"version":3,"sources":["CircleButton/CircleButton.js","ApiContext.js","notes-helpers.js","NoteListNav/NoteListNav.js","NotePageNav/NotePageNav.js","config.js","Note/Note.js","NoteListMain/NoteListMain.js","NotePageMain/NotePageMain.js","AddFolder.js","AddNote.js","NotefulError.js","App/App.js","index.js"],"names":["NavCircleButton","props","tag","className","children","otherProps","Object","objectWithoutProperties","React","createElement","objectSpread","join","defaultProps","createContext","notes","folders","addFolder","addNote","deleteNote","addNoteToState","findNote","arguments","length","undefined","noteId","find","note","id","NoteListNav","_this$context","this","context","_this$context$folders","_this$context$notes","console","log","react_default","a","map","folder","key","NavLink","to","concat","folderId","filter","countNotesForFolder","name","Link","type","react_fontawesome_index_es","icon","Component","contextType","ApiContext","NotePageNav","_this","match","params","findFolder","role","onClick","history","goBack","config","API_ENDPOINT","Note","handleClickDelete","e","preventDefault","fetch","method","headers","content-type","then","res","ok","json","Promise","reject","onDeleteNote","catch","error","_this$props","modified","format","NoteListMain","notesForFolder","getNotesForFolder","Note_Note_Note","NotePageMain","handleDeleteNote","push","content","split","para","i","AddFolder","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClickAddFolder","newItem","JSON","stringify","Content-Type","body","code","status","message","alert","getValue","val","setState","state","_this2","htmlFor","defaultValue","onChange","target","value","AddNote","generateFolderList","item","handleClickAddNote","description","document","getElementById","getName","getFolder","getContent","cols","rows","NotefulError","hasError","App","handleAddFolder","toConsumableArray","handleAddNote","all","_ref","_ref2","slicedToArray","notesRes","foldersRes","_ref3","_ref4","Fragment","path","Route","exact","component","newFolder","src_NotefulError","Provider","renderNavRoutes","renderMainRoutes","library","add","faPlus","faChevronLeft","faTrashAlt","faCheckDouble","ReactDOM","render","BrowserRouter","src_App_App"],"mappings":"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","file":"static/js/main.2e57c797.chunk.js","sourcesContent":["import React from 'react'\r\nimport './CircleButton.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function NavCircleButton(props) {\r\n  const { tag, className, children, ...otherProps } = props\r\n\r\n  return React.createElement(\r\n    props.tag,\r\n    {\r\n      className: ['NavCircleButton', props.className].join(' '),\r\n      ...otherProps\r\n    },\r\n    props.children\r\n  )\r\n}\r\n\r\nNavCircleButton.defaultProps ={\r\n  tag: 'a',\r\n}\r\n\r\nNavCircleButton.propTypes ={\r\n  tag: PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.func\r\n  ]),\r\n  \r\n  className: PropTypes.string,\r\n  children: PropTypes.array\r\n\r\n}","import React from 'react'\r\n\r\nexport default React.createContext({\r\n  notes: [],\r\n  folders: [],\r\n  addFolder: () => {},\r\n  addNote: () => {},\r\n  deleteNote: () => {},\r\n  addNoteToState: () => {}\r\n  // addFolderName: () => {}\r\n})\r\n","\r\nexport const findFolder = (folders=[], folderId) =>\r\n  folders.find(folder => folder.id == folderId)\r\n\r\nexport const findNote = (notes=[], noteId) =>\r\n  notes.find(note => note.id == noteId)\r\n\r\nexport const getNotesForFolder = (notes=[], folderId) => (\r\n  (!folderId)\r\n    ? notes\r\n    : notes.filter(note => note.folderId == folderId)\r\n)\r\n\r\nexport const countNotesForFolder = (notes=[], folderId) =>\r\n  notes.filter(note => note.folderId == folderId).length\r\n","import React from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { countNotesForFolder } from '../notes-helpers'\r\nimport './NoteListNav.css'\r\n\r\nexport default class NoteListNav extends React.Component {\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { folders=[], notes=[] } = this.context\r\n    console.log(folders, notes)\r\n    return (\r\n      <div className='NoteListNav'>\r\n        <ul className='NoteListNav__list'>\r\n          {folders.map(folder =>\r\n            <li key={folder.id}>\r\n              <NavLink\r\n                className='NoteListNav__folder-link'\r\n                to={`/folder/${folder.id}`}\r\n              >\r\n                <span className='NoteListNav__num-notes'>\r\n                  {countNotesForFolder(notes, folder.id)}\r\n                </span>\r\n                {folder.name}\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListNav__button-wrapper'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-folder'\r\n            type='button'\r\n            className='NoteListNav__add-folder-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Folder\r\n          </CircleButton>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote, findFolder } from '../notes-helpers'\r\nimport PropTypes from 'prop-types'\r\nimport './NotePageNav.css'\r\n\r\nexport default class NotePageNav extends React.Component {\r\n  static defaultProps = {\r\n    history: {\r\n      goBack: () => { }\r\n    },\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  render() {\r\n    const { notes, folders, } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || {}\r\n    const folder = findFolder(folders, note.folderId)\r\n    return (\r\n      <div className='NotePageNav'>\r\n        <CircleButton\r\n          tag='button'\r\n          role='link'\r\n          onClick={() => this.props.history.goBack()}\r\n          className='NotePageNav__back-button'\r\n        >\r\n          <FontAwesomeIcon icon='chevron-left' />\r\n          <br />\r\n          Back\r\n        </CircleButton>\r\n        {folder && (\r\n          <h3 className='NotePageNav__folder-name'>\r\n            {folder.name}\r\n          </h3>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageNav.propTypes = {\r\n  match: PropTypes.object\r\n}","export default {\r\n  API_ENDPOINT: 'https://sheltered-forest-98625.herokuapp.com/'\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { format } from 'date-fns'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport ApiContext from '../ApiContext'\r\nimport config from '../config'\r\nimport PropTypes from 'prop-types'\r\nimport './Note.css'\r\n\r\nexport default class Note extends React.Component {\r\n  static defaultProps ={\r\n    onDeleteNote: () => {},\r\n  }\r\n  static contextType = ApiContext;\r\n\r\n  handleClickDelete = e => {\r\n    e.preventDefault()\r\n    const noteId = this.props.id\r\n\r\n    fetch(`${config.API_ENDPOINT}/notes/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n    })\r\n      .then(res => {\r\n        if (!res.ok)\r\n          return res.json().then(e => Promise.reject(e))\r\n      })\r\n      .then(() => {\r\n        this.context.deleteNote(noteId)\r\n        // allow parent to perform extra behaviour\r\n        this.props.onDeleteNote(noteId)\r\n      })\r\n      .catch(error => {\r\n        console.error({ error })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { name, id, modified } = this.props\r\n    return (\r\n      <div className='Note'>\r\n        <h2 className='Note__title'>\r\n          <Link to={`/note/${id}`}>\r\n            {name}\r\n          </Link>\r\n        </h2>\r\n        <button\r\n          className='Note__delete'\r\n          type='button'\r\n          onClick={this.handleClickDelete}\r\n        >\r\n          <FontAwesomeIcon icon='trash-alt' />\r\n          {' '}\r\n          remove\r\n        </button>\r\n        <div className='Note__dates'>\r\n          <div className='Note__dates-modified'>\r\n            Modified\r\n            {' '}\r\n            <span className='Date'>\r\n              {format(modified, 'Do MMM YYYY')}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNote.propTypes = {\r\n  name: PropTypes.string,\r\n  id: PropTypes.number,\r\n  modified: PropTypes.string\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport Note from '../Note/Note'\r\nimport CircleButton from '../CircleButton/CircleButton'\r\nimport ApiContext from '../ApiContext'\r\nimport { getNotesForFolder } from '../notes-helpers'\r\nimport './NoteListMain.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NoteListMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  render() {\r\n    console.log('Here is the params', this.props.match.params)\r\n    const { folderId } = this.props.match.params\r\n    const { notes=[] } = this.context\r\n    const notesForFolder = getNotesForFolder(notes, folderId)\r\n    return (\r\n      <section className='NoteListMain'>\r\n        <ul>\r\n          {notesForFolder.map(note =>\r\n            <li key={note.id}>\r\n              <Note\r\n                id={note.id}\r\n                name={note.name}\r\n                modified={note.modified}\r\n              />\r\n            </li>\r\n          )}\r\n        </ul>\r\n        <div className='NoteListMain__button-container'>\r\n          <CircleButton\r\n            tag={Link}\r\n            to='/add-note'\r\n            type='button'\r\n            className='NoteListMain__add-note-button'\r\n          >\r\n            <FontAwesomeIcon icon='plus' />\r\n            <br />\r\n            Note\r\n          </CircleButton>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNoteListMain.propTypes = {\r\n  match: PropTypes.object\r\n}","import React from 'react'\r\nimport Note from '../Note/Note'\r\nimport ApiContext from '../ApiContext'\r\nimport { findNote } from '../notes-helpers'\r\nimport './NotePageMain.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default class NotePageMain extends React.Component {\r\n  static defaultProps = {\r\n    match: {\r\n      params: {}\r\n    }\r\n  }\r\n  static contextType = ApiContext\r\n\r\n  handleDeleteNote = noteId => {\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    const { notes=[] } = this.context\r\n    const { noteId } = this.props.match.params\r\n    const note = findNote(notes, noteId) || { content: '' }\r\n    return (\r\n      <section className='NotePageMain'>\r\n        <Note\r\n          id={note.id}\r\n          name={note.name}\r\n          modified={note.modified}\r\n          onDeleteNote={this.handleDeleteNote}\r\n        />\r\n        <div className='NotePageMain__content'>\r\n          {note.content.split(/\\n \\r|\\n/).map((para, i) =>\r\n            <p key={i}>{para}</p>\r\n          )}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nNotePageMain.propTypes = {\r\n  history: PropTypes.object\r\n}","import React from 'react'\r\nimport config from './config'\r\nimport ApiContext from './ApiContext'\r\nimport './add.css'\r\n\r\nclass AddFolder extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n      name:''\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  static contextType = ApiContext\r\n  \r\n\r\n  handleClickAddFolder = (name) => {\r\n    let newItem = JSON.stringify({\r\n      name: name,\r\n    })\r\n    let error;\r\n\r\n    if(name.length >= 3 && typeof name === typeof ''){\r\n    fetch(`${config.API_ENDPOINT}/folders`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: newItem\r\n    }).then(res => {\r\n      if (!res.ok){\r\n        error = { code: res.status };\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(folder => {\r\n      if (error) {\r\n        error.message = folder.message;\r\n        return Promise.reject(error);\r\n      }\r\n      this.context.addFolder(folder)\r\n      this.props.history.push(`/`)\r\n    })\r\n    .catch(error => {\r\n      console.error({error});\r\n    });\r\n  } else {\r\n    alert('please use more than 3 characters for name')\r\n  }\r\n    \r\n  }\r\n  getValue = (val) => {\r\n    this.setState({\r\n      name:val\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    //console.log(this.handleClickAddFolder('hi'))\r\n    console.log(this.state.name)\r\n    return (\r\n      <div>\r\n\r\n        <form>\r\n          <label\r\n            htmlFor='new-folder'\r\n          >New Folder Name:</label>\r\n          <input\r\n            id='new-Folder'\r\n            defaultValue='Hello'\r\n            onChange={(e) => this.getValue(e.target.value)}\r\n          >\r\n\r\n          </input>\r\n          <button\r\n            className='Add Folder'\r\n            type='button'\r\n            onClick={(e) => this.handleClickAddFolder(`${this.state.name}`)}\r\n          >\r\n            Add New Folder!\r\n      </button>\r\n        </form>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default AddFolder","import React from 'react'\r\nimport ApiContext from './ApiContext'\r\nimport config from './config'\r\n\r\n\r\nclass AddNote extends React.Component {\r\n  state = { \r\n    name:'',\r\n    folderId:'',\r\n    content:'',\r\n    modified:''\r\n   }\r\n\r\n  static contextType = ApiContext;\r\n\r\n  generateFolderList = () => {\r\n    const folderList = this.context.folders.map(item => {\r\n      return <option key={item.id} value={item.id}>{item.name}</option>\r\n    })\r\n    return folderList\r\n  }\r\n\r\n  handleClickAddNote = (name, description, folder) => {\r\n   \r\n    let newItem = JSON.stringify({\r\n      name: name,\r\n      folderId: folder || document.getElementById('add-folder').value,\r\n      content: description,\r\n      \r\n    })\r\n    let error;\r\n\r\n    if(name.length >= 3 && description.length >= 3){\r\n    fetch(`${config.API_ENDPOINT}/notes`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: newItem\r\n    })\r\n    .then(res => {\r\n      if (!res.ok){\r\n        error = { code: res.status };\r\n      }\r\n      return res.json();\r\n    })\r\n    .then(note => {\r\n      if (error) {\r\n        error.message = note.message;\r\n        return Promise.reject(error);\r\n      }\r\n      this.context.addNoteToState(note)\r\n      this.props.history.push(`/`)\r\n    })\r\n    .catch(error => {\r\n      console.error({error});\r\n    });\r\n  } else {\r\n    alert('Please use at least 3 characters for name and description')\r\n  }\r\n    \r\n  }\r\n\r\n  getName = (name) => {\r\n    this.setState({\r\n      name:name\r\n    })\r\n\r\n  }\r\n\r\n  getFolder = (folder) => {\r\n    this.setState({\r\n      folderId: folder\r\n    })\r\n\r\n  }\r\n  getContent = (content) => {\r\n    this.setState({\r\n      content: content\r\n    })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  render() { \r\n    \r\n\r\n    return (\r\n\r\n      <form>\r\n        <label htmlFor=\"add-folder\">Add Folder</label>\r\n        <select id=\"add-folder\"\r\n        onChange={(e) => this.getFolder(e.target.value)}\r\n        >{this.generateFolderList()}</select>\r\n        <label htmlFor=\"note-name\">Note Name</label>\r\n        <input \r\n          id=\"note-name\"\r\n          onChange={(e) => this.getName(e.target.value)}\r\n        >\r\n        </input>\r\n        <label htmlFor=\"add-description\">Add Description</label>\r\n        <textarea name=\"add-description\" id=\"add-description\" cols=\"30\" rows=\"10\"\r\n        onChange={(e) => this.getContent(e.target.value)}\r\n        ></textarea>\r\n        <button type=\"button\" onClick={()=> this.handleClickAddNote(this.state.name, this.state.content, this.state.folderId)}>Add Note</button>\r\n      </form>\r\n\r\n      );\r\n  }\r\n}\r\n \r\nexport default AddNote;","import React from 'react'\r\n\r\n\r\nclass NotefulError extends React.Component{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n  static getDerivedStateFromError(error) {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render(){\r\n    if (this.state.hasError) {      \r\n      return (\r\n        <h2>Could not display this Data, Please try and refresh your page!.</h2>\r\n      );\r\n    }\r\n    return this.props.children;\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default NotefulError","import React, {Component} from 'react';\r\nimport {Route, Link} from 'react-router-dom';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport NoteListNav from '../NoteListNav/NoteListNav';\r\nimport NotePageNav from '../NotePageNav/NotePageNav';\r\nimport NoteListMain from '../NoteListMain/NoteListMain';\r\nimport NotePageMain from '../NotePageMain/NotePageMain';\r\nimport ApiContext from '../ApiContext';\r\nimport config from '../config';\r\nimport AddFolder from '../AddFolder'\r\nimport AddNote from '../AddNote'\r\nimport NotefulError from '../NotefulError'\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        notes: [],\r\n        folders: [],\r\n        //folderName:''\r\n    };\r\n\r\n    componentDidMount() {\r\n        Promise.all([\r\n            fetch(`${config.API_ENDPOINT}/notes`),\r\n            fetch(`${config.API_ENDPOINT}/folders`)\r\n        ])\r\n            .then(([notesRes, foldersRes]) => {\r\n                if (!notesRes.ok)\r\n                    return notesRes.json().then(e => Promise.reject(e));\r\n                if (!foldersRes.ok)\r\n                    return foldersRes.json().then(e => Promise.reject(e));\r\n\r\n                return Promise.all([notesRes.json(), foldersRes.json()]);\r\n            })\r\n            .then(([notes, folders]) => {\r\n                this.setState({notes, folders});\r\n            })\r\n            .catch(error => {\r\n                console.error({error});\r\n            });\r\n    }\r\n\r\n    handleDeleteNote = noteId => {\r\n        console.log('this is running', noteId)\r\n        this.setState({\r\n            notes: this.state.notes.filter(note => note.id != noteId)\r\n        });\r\n    };\r\n\r\n    handleAddFolder = folder => {\r\n        this.setState({\r\n            folders: [...this.state.folders, folder]\r\n        })\r\n    }\r\n\r\n    handleAddNote = note => {\r\n        this.setState({\r\n            notes: [...this.state.notes, note]\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    renderNavRoutes() {\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListNav}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageNav} />\r\n                <Route path=\"/add-folder\" component={NotePageNav} />\r\n                <Route path=\"/add-note\" component={NotePageNav} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderMainRoutes() {\r\n        return (\r\n            <>\r\n                {['/', '/folder/:folderId'].map(path => (\r\n                    <Route\r\n                        exact\r\n                        key={path}\r\n                        path={path}\r\n                        component={NoteListMain}\r\n                    />\r\n                ))}\r\n                <Route path=\"/note/:noteId\" component={NotePageMain} />\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const value = {\r\n            notes: this.state.notes,\r\n            folders: this.state.folders,\r\n            newFolder: this.state.newFolder,\r\n            deleteNote: this.handleDeleteNote,\r\n            addFolder: this.handleAddFolder,\r\n            addNoteToState: this.handleAddNote\r\n            \r\n\r\n        };\r\n        return (\r\n           <NotefulError>\r\n           <ApiContext.Provider value={value}>\r\n                <div className=\"App\">\r\n                    <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\r\n                    <header className=\"App__header\">\r\n                        <h1>\r\n                            <Link to=\"/\">Noteful</Link>{' '}\r\n                            <FontAwesomeIcon icon=\"check-double\" />\r\n                        </h1>\r\n                    </header>\r\n                    <main className=\"App__main\">\r\n                    <Route path='/add-folder' component={AddFolder}/>\r\n                    <Route path='/add-note' component={AddNote}/>\r\n                        {this.renderMainRoutes()}</main>\r\n                </div>\r\n            </ApiContext.Provider>\r\n            </NotefulError>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n  faPlus, faChevronLeft, faTrashAlt, faCheckDouble\r\n} from '@fortawesome/free-solid-svg-icons'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport 'typeface-roboto'\r\nimport './index.css'\r\nimport App from './App/App'\r\n\r\nlibrary.add(faPlus, faChevronLeft, faTrashAlt, faCheckDouble)\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}